version: "3.9"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes   
    networks:
      - bde2
      
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - bde2
  # jobmanager:
    # image: flink
    # container_name: jobmanager
    # expose:
      # - "6123"
    # ports:
      # - "8081:8081"
    # command: jobmanager
    # environment:
      # - JOB_MANAGER_RPC_ADDRESS=jobmanager
  # taskmanager:
    # image: flink
    # container_name: taskmanager
    # expose:
      # - "6121"
      # - "6122"
    # depends_on:
      # - jobmanager
    # command: taskmanager
    # links:
      # - "jobmanager:jobmanager"
    # environment:
      # - JOB_MANAGER_RPC_ADDRESS=jobmanager
  # taskmanager-2:
    # image: flink
    # container_name: taskmanager-2
    # expose:
      # - "6121"
      # - "6122"
    # depends_on:
      # - jobmanager
    # command: taskmanager
    # links:
      # - "jobmanager:jobmanager"
    # environment:
      # - JOB_MANAGER_RPC_ADDRESS=jobmanager
  # cassandra:
    # image: cassandra:latest
    # container_name: cassandra
    # ports:
      # - "9042:9042"
    # volumes:
      # - cassandra_data:/var/lib/cassandra 
  # cassandra-setup:
    # build: ./cassandra
    # image: cassandra-setup
    # container_name: cassandra-setup
    # depends_on:
      # - cassandra
    # command: bash -c "sleep 30 && echo Creating Keyspace && cqlsh cassandra -f schema.cql && sleep infinity"
    # restart: unless-stopped
  cassandra:
    image: cassandra:latest
    container_name: cassandra-db
    ports:
      - '9042:9042'
    environment:
      - CASSANDRA_CLUSTER_NAME=cassandra_cluster
      - CASSANDRA_START_RPC=true
    volumes:
      - cassandra_data:/var/lib/cassandra
    networks:
      - bde2

  producer:
    build: ./kafka_producer
    image: producer
    depends_on:
      - kafka
    restart: unless-stopped
    volumes:
      - appdata:/var/www
    networks:
      - bde2

  spark:
    container_name: spark-master-bde2
    image: docker.io/bitnami/spark:latest
    environment:
      - SPARK_MODE=master
    ports:
      - '8080:8080'
      - '7077:7077'
      #- '4040:4040'
    networks:
      - bde2
  spark-worker:
    container_name: spark-worker-bde2
    image: docker.io/bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master-bde2:7077
    networks:
      - bde2
  spark-streaming:
    build: ./spark_streaming
    image: spark_streaming
    container_name: spark_streaming_kontejner
    depends_on:
      - kafka
      - spark
      - spark-worker
      - cassandra
    restart: on-failure
    networks:
      - bde2
networks:
  bde2:
      external: true
volumes:
  cassandra_data:
  appdata:
